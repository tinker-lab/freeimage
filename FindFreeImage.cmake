find_path(FREEIMAGE_INCLUDE_DIR FreeImage.h
          HINTS $ENV{FreeImage_DIR}/include $ENV{FREEIMAGE_INCLUDE_DIR})

find_library(FREEIMAGE_OPT_LIBRARY NAMES freeimage_x64.lib
          HINTS $ENV{FreeImage_DIR}/build/Release $ENV{FREEIMAGE_LIB_DIR})

find_library(FREEIMAGE_DEBUG_LIBRARY NAMES freeimage_x64d.lib
          HINTS $ENV{FreeImage_DIR}/build/Debug $ENV{FREEIMAGE_LIB_DIR})
		  
find_path(ZLIB_INCLUDE_DIR zlib.h
          HINTS $ENV{FreeImage_DIR}/zlib.lib/include $ENV{ZLIB_INCLUDE_DIR})

find_library(ZLIB_OPT_LIBRARY NAMES zlib_x64.lib
          HINTS $ENV{FreeImage_DIR}/build/zlib.lib/Release $ENV{ZLIB_LIB_DIR})
		  
find_library(ZLIB_DEBUG_LIBRARY NAMES zlib_x64.lib
          HINTS $ENV{FreeImage_DIR}/build/zlib.lib/Debug $ENV{ZLIB_LIB_DIR})

set(FREEIMAGE_INCLUDE_DIRS ${FREEIMAGE_INCLUDE_DIR} ${ZLIB_INCLUDE_DIR})

set(FREEIMAGE_OPT_LIBRARIES optimized ${FREEIMAGE_OPT_LIBRARY} optimized ${ZLIB_OPT_LIBRARY})
set(FREEIMAGE_DEBUG_LIBRARIES debug ${FREEIMAGE_DEBUG_LIBRARY} debug ${ZLIB_DEBUG_LIBRARY})
set(FREEIMAGE_ALL_LIBRARIES "")

include(FindPackageHandleStandardArgs)
# handle the QUIETLY and REQUIRED arguments and set LIBXML2_FOUND to TRUE
# if all listed variables are TRUE
find_package_handle_standard_args(FREEIMAGE  DEFAULT_MSG
		FREEIMAGE_OPT_LIBRARIES FREEIMAGE_DEBUG_LIBRARIES FREEIMAGE_INCLUDE_DIR FREEIMAGE_OPT_LIBRARY FREEIMAGE_DEBUG_LIBRARY ZLIB_INCLUDE_DIR ZLIB_OPT_LIBRARY ZLIB_DEBUG_LIBRARY)

mark_as_advanced(FREEIMAGE_INCLUDE_DIR FREEIMAGE_OPT_LIBRARY FREEIMAGE_DEBUG_LIBRARY ZLIB_INCLUDE_DIR ZLIB_OPT_LIBRARY ZLIB_DEBUG_LIBRARY)
